    /**
     * @ORM\Column(name="image_link",type="string", length=255, nullable=false)
     */
    public $imagelink;

    /**
     * @Assert\File(maxSize="600000000")
     */
    public $file;

    /**
     * @ORM\PrePersist()
     * @ORM\PreUpdate()
     */
    public function preUpload() {
        if (null !== $this->file) {
            // do whatever you want to generate a unique name
            $filename = sha1(uniqid(mt_rand(), true));
            $this->imagelink = $filename . '.' . $this->file->guessExtension();
        }
    }
    public function setFile(UploadedFile $file = null)
    {
        $this->file = $file;
        // check if we have an old image imagelink
        if (isset($this->imagelink)) {
            // store the old name to delete after the update
            $this->temp = $this->imagelink;
            $this->imagelink = null;
        } else {
            $this->imagelink = 'initial';
        }
    }


    /**
     * @ORM\PostPersist()
     * @ORM\PostUpdate()
     */
    public function upload()
    {
        if (null === $this->file)
        {
            return;
        }

        // if there is an error when moving the file, an exception will
        // be automatically thrown by move(). This will properly prevent
        // the entity from being persisted to the database on error
        $this->file->move($this->getUploadRootDir(), $this->imagelink);

        unset($this->file);
    }

    /**
     * @ORM\PostRemove()
     */
    public function removeUpload()
    {
        if(file_exists($this->getAbsoluteimagelink())) {
            if ($this->getUploadRootDir() . $this->logo = $this->getAbsoluteimagelink()) {
                unlink($this->logo);
            }
        }


    }

    public function getAbsoluteimagelink()
    {
        return null === $this->imagelink ? null : $this->getUploadRootDir().'/'.$this->imagelink;
    }

    public function getWebimagelink()
    {
        return null === $this->imagelink ? null : $this->getUploadDir().'/'.$this->id.'/'.$this->imagelink;
    }

   public function getUploadRootDir()
    {
        // the absolute directory imagelink where uploaded documents should be saved
        return __DIR__.'/../../../web/'.$this->getUploadDir().'/'.$this->id;
    }

    public function getUploadDir()
    {
        // get rid of the __DIR__ so it doesn't screw when displaying uploaded doc/image in the view.
        return 'uploads/Images';

    }

    /**
     * Set imagelink
     *
     * @param string $imagelink
     */
    public function setimagelink($imagelink)
    {
        $this->imagelink = $imagelink;
    }

    /**
     * Get imagelink
     *
     * @return string
     */
    public function getimagelink()
    {
        return $this->imagelink;
    }

